# Étape de build
FROM node:18-alpine as build

# Définir le répertoire de travail
WORKDIR /app

# Copier seulement les fichiers package.json pour optimiser le cache de Docker
COPY client/package*.json ./

# Installer les dépendances
RUN npm ci

# Copier le reste des fichiers du frontend
COPY client/ ./

# Variable d'environnement pour le point de terminaison de l'API (peut être remplacée lors du build)
ARG VITE_API_ENDPOINT
ENV VITE_API_ENDPOINT=${VITE_API_ENDPOINT}

# Construire l'application
RUN npm run build

# Étape de production avec Nginx
FROM nginx:alpine

# Copier les fichiers de build de l'étape précédente
COPY --from=build /app/dist /usr/share/nginx/html

# Ajout du template et génération du fichier final
ARG API_URL
ENV API_URL=${API_URL}
COPY client/nginx.conf.template /etc/nginx/conf.d/nginx.conf.template
RUN envsubst '${API_URL}' < /etc/nginx/conf.d/nginx.conf.template > /etc/nginx/conf.d/default.conf

# Exposer le port 80
EXPOSE 80

# Commande pour démarrer Nginx
CMD ["nginx", "-g", "daemon off;"]